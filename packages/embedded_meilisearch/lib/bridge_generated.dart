// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.49.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

import 'package:meta/meta.dart';
import 'package:meta/meta.dart';
import 'dart:ffi' as ffi;

abstract class EmbeddedMilli {
  /// Ensures an instance of milli (represented by just a directory) is initialized
  Future<void> ensureInstanceInitialized({required String instanceDir, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kEnsureInstanceInitializedConstMeta;

  /// Ensures a milli index is initialized
  Future<void> ensureIndexInitialized({required String instanceDir, required String indexName, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kEnsureIndexInitializedConstMeta;
}

class EmbeddedMilliImpl implements EmbeddedMilli {
  final EmbeddedMilliPlatform _platform;
  factory EmbeddedMilliImpl(ExternalLibrary dylib) => EmbeddedMilliImpl.raw(EmbeddedMilliPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory EmbeddedMilliImpl.wasm(FutureOr<WasmModule> module) => EmbeddedMilliImpl(module as ExternalLibrary);
  EmbeddedMilliImpl.raw(this._platform);
  Future<void> ensureInstanceInitialized({required String instanceDir, dynamic hint}) => _platform.executeNormal(FlutterRustBridgeTask(
        callFfi: (port_) => _platform.inner.wire_ensure_instance_initialized(port_, _platform.api2wire_String(instanceDir)),
        parseSuccessData: _wire2api_unit,
        constMeta: kEnsureInstanceInitializedConstMeta,
        argValues: [
          instanceDir
        ],
        hint: hint,
      ));

  FlutterRustBridgeTaskConstMeta get kEnsureInstanceInitializedConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "ensure_instance_initialized",
        argNames: [
          "instanceDir"
        ],
      );

  Future<void> ensureIndexInitialized({required String instanceDir, required String indexName, dynamic hint}) => _platform.executeNormal(FlutterRustBridgeTask(
        callFfi: (port_) => _platform.inner.wire_ensure_index_initialized(port_, _platform.api2wire_String(instanceDir), _platform.api2wire_String(indexName)),
        parseSuccessData: _wire2api_unit,
        constMeta: kEnsureIndexInitializedConstMeta,
        argValues: [
          instanceDir,
          indexName
        ],
        hint: hint,
      ));

  FlutterRustBridgeTaskConstMeta get kEnsureIndexInitializedConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "ensure_index_initialized",
        argNames: [
          "instanceDir",
          "indexName"
        ],
      );

// Section: wire2api

  void _wire2api_unit(dynamic raw) {
    return;
  }
}

// Section: api2wire

@protected
int api2wire_u8(int raw) {
  return raw;
}

class EmbeddedMilliPlatform extends FlutterRustBridgeBase<EmbeddedMilliWire> {
  EmbeddedMilliPlatform(ffi.DynamicLibrary dylib) : super(EmbeddedMilliWire(dylib));
// Section: api2wire

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }
// Section: api_fill_to_wire

}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.

/// generated by flutter_rust_bridge
class EmbeddedMilliWire implements FlutterRustBridgeWireBase {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  EmbeddedMilliWire(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  EmbeddedMilliWire.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup) : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr = _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>('store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr.asFunction<void Function(DartPostCObjectFnType)>();

  void wire_ensure_instance_initialized(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_dir,
  ) {
    return _wire_ensure_instance_initialized(
      port_,
      instance_dir,
    );
  }

  late final _wire_ensure_instance_initializedPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_ensure_instance_initialized');
  late final _wire_ensure_instance_initialized = _wire_ensure_instance_initializedPtr.asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_ensure_index_initialized(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_dir,
    ffi.Pointer<wire_uint_8_list> index_name,
  ) {
    return _wire_ensure_index_initialized(
      port_,
      instance_dir,
      index_name,
    );
  }

  late final _wire_ensure_index_initializedPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>>('wire_ensure_index_initialized');
  late final _wire_ensure_index_initialized = _wire_ensure_index_initializedPtr.asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_0(
    int len,
  ) {
    return _new_uint_8_list_0(
      len,
    );
  }

  late final _new_uint_8_list_0Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_uint_8_list> Function(ffi.Int32)>>('new_uint_8_list_0');
  late final _new_uint_8_list_0 = _new_uint_8_list_0Ptr.asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  void free_WireSyncReturnStruct(
    WireSyncReturnStruct val,
  ) {
    return _free_WireSyncReturnStruct(
      val,
    );
  }

  late final _free_WireSyncReturnStructPtr = _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturnStruct)>>('free_WireSyncReturnStruct');
  late final _free_WireSyncReturnStruct = _free_WireSyncReturnStructPtr.asFunction<void Function(WireSyncReturnStruct)>();
}

class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

typedef DartPostCObjectFnType = ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(DartPort, ffi.Pointer<ffi.Void>)>>;
typedef DartPort = ffi.Int64;
